{"name":"slideDown","type":"method","title":".slideDown()","deprecated":null,"removed":null,"desc":"Display the matched elements with a sliding motion.","categories":["effects/sliding","version/1.0","version/1.4.3"],"entries":[{"return":"jQuery","signatures":[{"added":"1.0","argument":[{"desc":"A string or number determining how long the animation will run.","type":[{"name":"Number"},{"name":"String"}],"name":"duration","default":"400","optional":"true"},{"desc":"A function to call once the animation is complete.","name":"complete","type":"Function","optional":"true"}]},{"added":"1.0","argument":{"desc":"A map of additional options to pass to the method.","property":[{"desc":"A string or number determining how long the animation will run.","type":[{"name":"Number"},{"name":"String"}],"name":"duration","default":"400"},{"desc":"A string indicating which easing function to use for the transition.","name":"easing","type":"String","default":"swing"},{"desc":"A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. <strong>As of jQuery 1.7</strong>, the queue option can also accept a string, in which case the animation is added to the queue represented by that string.","name":"queue","type":"Boolean","default":"true"},{"desc":"A map of one or more of the CSS properties defined by the properties argument and their corresponding easing functions.","name":"specialEasing","type":"PlainObject","added":"1.4"},{"desc":"A function to be called for each animated property of each animated element. This function provides an opportunity to modify the Tween object to change the value of the property before it is set.","argument":[{"desc":"The numeric value of the property being animated at each step","name":"now","type":"Number"},{"desc":"An object of properties related to the animation and the element being animated. For information about the tween object and its properties, see <ahref=\"/jQuery.Tween/\">jQuery.Tween</a>","name":"tween","type":"Tween"}],"name":"step","type":"Function"},{"desc":"A function to be called after each step of the animation, only once per animated element regardless of the number of animated properties.","argument":[{"desc":"An enhanced Promise oject with additional properties for the animation","name":"animation","type":"Promise"},{"desc":"A number from 0 to 1 indicating the progress of the animation","name":"progress","type":"Number"},{"desc":"A number indicating the remaining number of milliseconds until the scheduled end of the animation","name":"remainingMs","type":"Number"}],"name":"progress","type":"Function","added":"1.8"},{"desc":"A function to call once the animation is complete.","name":"complete","type":"Function"},{"desc":"A function to be called when the animation completes (its Promise object is resolved).","argument":[{"desc":"An enhanced Promise oject with additional properties for the animation","name":"animation","type":"Promise"},{"desc":"Indicates whether the animation jumped to the end","name":"jumpedToEnd","type":"Boolean"}],"name":"done","type":"Function","added":"1.8"},{"desc":"A function to be called when the animation fails to complete (its Promise object is rejected).","argument":[{"desc":"An enhanced Promise oject with additional properties for the animation","name":"animation","type":"Promise"},{"desc":"Indicates whether the animation jumped to the end","name":"jumpedToEnd","type":"Boolean"}],"name":"fail","type":"Function","added":"1.8"},{"desc":"A function to be called when the animation completes or stops without completing (its Promise object is either resolved or rejected).","argument":[{"desc":"An enhanced Promise oject with additional properties for the animation","name":"animation","type":"Promise"},{"desc":"Indicates whether the animation jumped to the end","name":"jumpedToEnd","type":"Boolean"}],"name":"always","type":"Function","added":"1.8"}],"name":"options","type":"PlainObject"}},{"added":"1.4.3","argument":[{"desc":"A string or number determining how long the animation will run.","type":[{"name":"Number"},{"name":"String"}],"name":"duration","default":"400","optional":"true"},{"desc":"A string indicating which easing function to use for the transition.","name":"easing","type":"String","default":"swing","optional":"true"},{"desc":"A function to call once the animation is complete.","name":"complete","type":"Function","optional":"true"}]}],"examples":[{"desc":"Animates all divs to slide down and show themselves over 600 milliseconds.","code":"\n$(document.body).click(function () {\nif ($(\"div:first\").is(\":hidden\")) {\n$(\"div\").slideDown(\"slow\");\n} else {\n$(\"div\").hide();\n}\n});\n\n","css":"\ndiv { background:#de9a44; margin:3px; width:80px;\nheight:40px; display:none; float:left; }\n","html":"Click me!\n<div></div>\n<div></div>\n<div></div>"},{"desc":"Animates all inputs to slide down, completing the animation within 1000 milliseconds. Once the animation is done, the input look is changed especially if it is the middle input which gets the focus.","code":"\n$(\"div\").click(function () {\n$(this).css({ borderStyle:\"inset\", cursor:\"wait\" });\n$(\"input\").slideDown(1000,function(){\n$(this).css(\"border\", \"2px red inset\")\n.filter(\".middle\")\n .css(\"background\", \"yellow\")\n .focus();\n$(\"div\").css(\"visibility\", \"hidden\");\n});\n});\n\n","css":"\ndiv { background:#cfd; margin:3px; width:50px;\ntext-align:center; float:left; cursor:pointer;\nborder:2px outset black; font-weight:bolder; }\ninput { display:none; width:120px; float:left;\nmargin:10px; }\n","html":"<div>Push!</div>\n<input type=\"text\" />\n<input type=\"text\" class=\"middle\" />\n\n<input type=\"text\" />"}],"longdesc":"\n    <p>The <code>.slideDown()</code> method animates the height of the matched elements. This causes lower parts of the page to slide down, making way for the revealed items.</p>\n    <p>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings <code>'fast'</code> and <code>'slow'</code> can be supplied to indicate durations of <code>200</code> and <code>600</code> milliseconds, respectively. If any other string is supplied, or if the <code>duration</code> parameter is omitted, the default duration of  <code>400</code> milliseconds is used.</p>\n    <p>We can animate any element, such as a simple image:</p>\n    <pre><code>&lt;div id=\"clickme\"&gt;\n  Click here\n&lt;/div&gt;\n&lt;img id=\"book\" src=\"book.png\" alt=\"\" width=\"100\" height=\"123\" /&gt;</code></pre>\n    <p>With the element initially hidden, we can show it slowly:</p>\n    <pre><code>$('#clickme').click(function() {\n  $('#book').slideDown('slow', function() {\n    // Animation complete.\n  });\n});</code></pre>\n    <p class=\"image four-across\">\n      <img src=\"/resources/0042_06_17.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_18.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_19.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_20.png\" alt=\"\"/>\n    </p>\n    <h4 id=\"easing\">Easing</h4>\n    <p><strong>As of jQuery 1.4.3</strong>, an optional string naming an easing function may be used. Easing functions specify the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called <code>swing</code>, and one that progresses at a constant pace, called <code>linear</code>. More easing functions are available with the use of plug-ins, most notably the <a href=\"http://jqueryui.com\">jQuery UI suite</a>.</p>\n    <h4 id=\"callback-function\">Callback Function</h4>\n    <p>If supplied, the callback is fired once the animation is complete. This can be useful for stringing different animations together in sequence. The callback is not sent any arguments, but <code>this</code> is set to the DOM element being animated. If multiple elements are animated, it is important to note that the callback is executed once per matched element, not once for the animation as a whole.</p>\n    <p><strong>As of jQuery 1.6</strong>, the <code><a href=\"http://api.jquery.com/promise/\">.promise()</a></code> method can be used in conjunction with the <code><a href=\"http://api.jquery.com/deferred.done/\">deferred.done()</a></code> method to execute a single callback for the animation as a whole when <em>all</em> matching elements have completed their animations ( See the <a href=\"http://api.jquery.com/promise/#example-1\">example for .promise()</a> ).  </p>\n  "}]}